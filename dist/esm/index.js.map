{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AA8BjD,MAAM,kBAAkB,GAAG,cAAc,CAA2B,oBAAoB,CAAC,CAAC;AAE1F,OAAO,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nexport interface GeofenceBackgroundPlugin {\n  startLocationService(): Promise<void>;\n  stopLocationService(): Promise<void>;\n  checkAndRequestPermissions(): Promise<void>;\n  addGeofence(options: { id: string, latitude: number, longitude: number, radius: number, transitionType: number }): Promise<void>;\n  removeGeofence(options: { id: string }): Promise<void>;\n  removeAllGeofences(): Promise<void>;\n  getGeofences(): Promise<{ geofences: any[] }>;\n  getLocations(): Promise<{ locations: any[] }>;\n  getPermissionsStatus(): Promise<{ status: string }>;\n  isIgnoringBatteryOptimizations(): Promise<{ isIgnoring: boolean }>;\n  requestIgnoreBatteryOptimizations(): Promise<void>;\n  openSettings(): Promise<void>;\n  isLocationServiceRunning(): Promise<{ isRunning: boolean }>;\n  isGooglePlayServicesAvailable(): Promise<{ isAvailable: boolean }>;\n  requestGooglePlayServices(): Promise<void>;\n  isLocationEnabled(): Promise<{ isEnabled: boolean }>;\n  requestLocationEnabling(): Promise<void>;\n  isBackgroundLocationPermissionGranted(): Promise<{ isGranted: boolean }>;\n  requestBackgroundLocationPermission(): Promise<void>;\n  isIgnoringOptimizations(): Promise<{ isIgnoring: boolean }>;\n  requestIgnoreOptimizations(): Promise<void>;\n  isIgnoringDataSaver(): Promise<{ isIgnoring: boolean }>;\n  requestIgnoreDataSaver(): Promise<void>;\n  startTrackUser(): Promise<void>;\n  stopTrackUser(): Promise<void>;\n}\n\nconst GeofenceBackground = registerPlugin<GeofenceBackgroundPlugin>('GeofenceBackground');\n\nexport { GeofenceBackground };\n"]}